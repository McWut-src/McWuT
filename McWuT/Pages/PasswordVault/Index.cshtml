@page
@model McWuT.Web.Pages.PasswordVault.IndexModel
@{
    ViewData["Title"] = "Password Vault";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="bi bi-shield-lock me-2"></i>Password Vault
                    </h4>
                    <a asp-page="./Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-1"></i>Add Entry
                    </a>
                </div>
                <div class="card-body">
                    <!-- Search Form -->
                    <form method="get" class="mb-4">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-search"></i>
                                    </span>
                                    <input type="text" class="form-control" name="SearchTerm" value="@Model.SearchTerm" 
                                           placeholder="Search by name, website, username, or category...">
                                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                                {
                                    <a asp-page="./Index" class="btn btn-outline-primary">
                                        <i class="bi bi-x-circle me-1"></i>Clear Search
                                    </a>
                                }
                            </div>
                        </div>
                    </form>

                    @if (Model.Entries.Any())
                    {
                        <!-- Entries Table -->
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Name</th>
                                        <th>Website</th>
                                        <th>Username</th>
                                        <th>Category</th>
                                        <th>Last Updated</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var entry in Model.Entries)
                                    {
                                        <tr>
                                            <td>
                                                <i class="bi bi-tag me-2"></i>
                                                <strong>@entry.Name</strong>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(entry.Website))
                                                {
                                                    <i class="bi bi-globe me-2"></i>
                                                    @entry.Website
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(entry.Username))
                                                {
                                                    <i class="bi bi-person me-2"></i>
                                                    @entry.Username
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(entry.Category))
                                                {
                                                    <span class="badge bg-secondary">@entry.Category</span>
                                                }
                                            </td>
                                            <td>
                                                <small class="text-muted">
                                                    @((entry.UpdatedAt ?? entry.CreatedAt).ToString("MMM dd, yyyy"))
                                                </small>
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    @if (!string.IsNullOrEmpty(entry.EncryptedPassword))
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                                                onclick="revealPassword('@entry.UniqueId')"
                                                                title="View Password">
                                                            <i class="bi bi-eye"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-secondary" 
                                                                disabled title="No password stored">
                                                            <i class="bi bi-eye-slash"></i>
                                                        </button>
                                                    }
                                                    <a asp-page="./Edit" asp-route-id="@entry.UniqueId" 
                                                       class="btn btn-sm btn-outline-secondary" title="Edit">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <a asp-page="./Delete" asp-route-id="@entry.UniqueId" 
                                                       class="btn btn-sm btn-outline-danger" title="Delete">
                                                        <i class="bi bi-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Password entries pagination">
                                <ul class="pagination justify-content-center">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-page="./Index" asp-route-currentPage="@(Model.CurrentPage - 1)" asp-route-searchTerm="@Model.SearchTerm">
                                                Previous
                                            </a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-page="./Index" asp-route-currentPage="@i" asp-route-searchTerm="@Model.SearchTerm">
                                                @i
                                            </a>
                                        </li>
                                    }

                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-page="./Index" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-searchTerm="@Model.SearchTerm">
                                                Next
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-shield-exclamation display-1 text-muted"></i>
                            <h5 class="mt-3">No password entries found</h5>
                            <p class="text-muted">
                                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                                {
                                    <span>No entries match your search criteria.</span>
                                }
                                else
                                {
                                    <span>Start by adding your first password entry to the vault.</span>
                                }
                            </p>
                            <a asp-page="./Create" class="btn btn-primary">
                                <i class="bi bi-plus-circle me-1"></i>Add First Entry
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Password Reveal Modal -->
<div class="modal fade" id="passwordModal" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="passwordModalLabel">
                    <i class="bi bi-key me-2"></i>Password
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group">
                    <input type="text" class="form-control" id="revealedPassword" readonly>
                    <button type="button" class="btn btn-outline-secondary" onclick="copyPassword()">
                        <i class="bi bi-clipboard"></i> Copy
                    </button>
                </div>
                <small class="text-muted">This password will be hidden when you close this dialog.</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function revealPassword(entryId) {
            try {
                const formData = new FormData();
                formData.append('entryId', entryId);
                
                const response = await fetch('?handler=RevealPassword', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: formData
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('revealedPassword').value = data.password;
                    const modal = new bootstrap.Modal(document.getElementById('passwordModal'));
                    modal.show();
                } else {
                    alert('Failed to retrieve password');
                }
            } catch (error) {
                alert('Error retrieving password');
                console.error(error);
            }
        }

        function copyPassword() {
            const passwordField = document.getElementById('revealedPassword');
            passwordField.select();
            navigator.clipboard.writeText(passwordField.value).then(() => {
                // Show feedback
                const copyBtn = event.target.closest('button');
                const originalText = copyBtn.innerHTML;
                copyBtn.innerHTML = '<i class="bi bi-check"></i> Copied!';
                setTimeout(() => {
                    copyBtn.innerHTML = originalText;
                }, 2000);
            });
        }

        // Clear password when modal is hidden
        document.getElementById('passwordModal').addEventListener('hidden.bs.modal', function () {
            document.getElementById('revealedPassword').value = '';
        });
    </script>
    
    <form style="display: none;">
        @Html.AntiForgeryToken()
    </form>
}